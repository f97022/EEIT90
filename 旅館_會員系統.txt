會員系統 CRUD
前台:註冊(C)、登入(R)、登入後頁面(管理員>功能總管,會員>個人資料)
後台:修改會員資料(U)、刪除會員資料(D)、管理會員資料(CRUD)
延伸功能:信箱驗證、忘記密碼
資安:SQL 注入攻擊、跨站腳本(XSS)攻擊、跨站請求偽造(CSRF)攻擊、人機驗證CAPTCHA使用Turnstile
Servlet Filter:
身分驗證 檢查Session 判斷是否登入
字符編碼UTF-8
輸入校驗 去除特殊字符和格式校驗 防止SQL 注入和跨站腳本(XSS)
自訂錯誤處理?

註冊會員 需注意的欄位 *表示目前階段可不實作,但未來需實作
電子信箱 ajax判斷是否註冊*
密碼 設立規則(至少8字,上限為64字,需有大小寫英文,數字,特殊字元!@#$%^*)並正規化驗證
性別 用清單選擇
生日 用日期
身分證字號 要正規化驗證
國家 用清單選擇
地址 *用清單選擇(縣市、區) + 輸入欄位(詳細地址)
護照號碼 國籍代碼 + 護照號碼 (依照國籍去正規化驗證X)

code:
* bean
controller(servlet)
dao
service
view(webapp/static)

架構: 
req
webClient(html) > controller > service > dao > DB
res
DB > dao > service > controller > view(JSP) > webClient

登入:
輸入並傳送帳密 > 收到帳密 > 取DB(users)資料比對(正確換頁面 設定Session 錯誤留在這頁) > 跳轉到登入後頁面

註冊:
輸入並傳送資料 > 收到資料 > 處理資料 > 放入DB(users,members) > 跳轉到登入頁面

登入後頁面:
檢查Session 身分組 > (admin選1 user選2 都不是和沒有選3)
1.功能總管 > 1.查詢會員資料(1.修改會員資料 2.註銷或恢復帳號) 2.新增管理員帳號
2.個人資料 > 1.修改個人資料 2.修改信箱或密碼 3.註銷會員
3.跳轉到登入頁面

1-1查詢會員資料(id查詢單筆、模糊查詢多筆):
輸入並傳送資料 > (c>s>dao>DB)取DB(users,members)資料 > 帶入查詢結果頁面

1-1-1修改會員資料:
傳送請求 > (c>s>dao>DB)取DB(users,members)資料 > 帶入頁面 > 修改完送出資料 >
放入DB > 跳轉到該筆資料頁面

1-1-2註銷或恢復帳號:
傳送請求 > 更新DB(users)資料 > 回到查詢結果頁面

1-2新增管理員帳號:
輸入並傳送資料 > 收到資料 > 放入DB(users) > 回到功能總管

2-1修改個人資料:
傳送請求 > (c>s>dao>DB)取DB(users,members)資料 > 帶入頁面 > 修改完送出資料 >
放入DB > 跳轉到個人資料頁面

2-2修改信箱或密碼:
輸入並傳送資料 > 收到資料 > 取DB(users)資料比對(確認舊信箱或密碼 錯誤留在這頁) > 正確 更新DB(users)資料 > 跳轉到登入頁面

2-3註銷會員: 輸入並傳送帳密 > 收到帳密 > 取DB(users)資料比對 (錯誤留在這頁) > 正確 更新DB(users)資料 > 跳轉到登入頁面